create table "public"."header_scripts" (
    "id" bigint generated by default as identity not null,
    "name" text not null default ''::text,
    "script" text not null default ''::text,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."header_scripts" enable row level security;

CREATE UNIQUE INDEX body_scripts_name_key ON public.header_scripts USING btree (name);

CREATE UNIQUE INDEX body_scripts_pkey ON public.header_scripts USING btree (id);

CREATE UNIQUE INDEX body_scripts_script_key ON public.header_scripts USING btree (script);

alter table "public"."header_scripts" add constraint "body_scripts_pkey" PRIMARY KEY using index "body_scripts_pkey";

alter table "public"."header_scripts" add constraint "body_scripts_name_key" UNIQUE using index "body_scripts_name_key";

alter table "public"."header_scripts" add constraint "body_scripts_script_key" UNIQUE using index "body_scripts_script_key";

grant delete on table "public"."header_scripts" to "anon";

grant insert on table "public"."header_scripts" to "anon";

grant references on table "public"."header_scripts" to "anon";

grant select on table "public"."header_scripts" to "anon";

grant trigger on table "public"."header_scripts" to "anon";

grant truncate on table "public"."header_scripts" to "anon";

grant update on table "public"."header_scripts" to "anon";

grant delete on table "public"."header_scripts" to "authenticated";

grant insert on table "public"."header_scripts" to "authenticated";

grant references on table "public"."header_scripts" to "authenticated";

grant select on table "public"."header_scripts" to "authenticated";

grant trigger on table "public"."header_scripts" to "authenticated";

grant truncate on table "public"."header_scripts" to "authenticated";

grant update on table "public"."header_scripts" to "authenticated";

grant delete on table "public"."header_scripts" to "service_role";

grant insert on table "public"."header_scripts" to "service_role";

grant references on table "public"."header_scripts" to "service_role";

grant select on table "public"."header_scripts" to "service_role";

grant trigger on table "public"."header_scripts" to "service_role";

grant truncate on table "public"."header_scripts" to "service_role";

grant update on table "public"."header_scripts" to "service_role";

create policy "Allow admin users to do anything on header scripts"
on "public"."header_scripts"
as permissive
for all
to authenticated
using ((EXISTS ( SELECT 1
   FROM user_roles
  WHERE ((user_roles.user_id = auth.uid()) AND (user_roles.role = 'admin'::app_role)))));



