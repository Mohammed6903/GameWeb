create table "public"."favIcon" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "type" text not null,
    "publicUrl" text not null
);


alter table "public"."favIcon" enable row level security;

alter table "public"."game_plays" drop column "played_at";

alter table "public"."game_plays" drop column "user_id";

alter table "public"."game_plays" add column "play_count" integer not null default 0;

alter table "public"."game_plays" add column "play_date" date not null;

alter table "public"."game_plays" alter column "game_id" drop not null;

alter table "public"."game_plays" alter column "id" set default gen_random_uuid();

alter table "public"."game_plays" alter column "id" drop identity;

alter table "public"."game_plays" alter column "id" set data type uuid using "id"::uuid;

alter table "public"."game_plays" enable row level security;

CREATE UNIQUE INDEX "favIcon_pkey" ON public."favIcon" USING btree (id);

CREATE UNIQUE INDEX "favIcon_type_key" ON public."favIcon" USING btree (type);

alter table "public"."favIcon" add constraint "favIcon_pkey" PRIMARY KEY using index "favIcon_pkey";

alter table "public"."favIcon" add constraint "favIcon_type_key" UNIQUE using index "favIcon_type_key";

grant delete on table "public"."favIcon" to "anon";

grant insert on table "public"."favIcon" to "anon";

grant references on table "public"."favIcon" to "anon";

grant select on table "public"."favIcon" to "anon";

grant trigger on table "public"."favIcon" to "anon";

grant truncate on table "public"."favIcon" to "anon";

grant update on table "public"."favIcon" to "anon";

grant delete on table "public"."favIcon" to "authenticated";

grant insert on table "public"."favIcon" to "authenticated";

grant references on table "public"."favIcon" to "authenticated";

grant select on table "public"."favIcon" to "authenticated";

grant trigger on table "public"."favIcon" to "authenticated";

grant truncate on table "public"."favIcon" to "authenticated";

grant update on table "public"."favIcon" to "authenticated";

grant delete on table "public"."favIcon" to "service_role";

grant insert on table "public"."favIcon" to "service_role";

grant references on table "public"."favIcon" to "service_role";

grant select on table "public"."favIcon" to "service_role";

grant trigger on table "public"."favIcon" to "service_role";

grant truncate on table "public"."favIcon" to "service_role";

grant update on table "public"."favIcon" to "service_role";

create policy "Allow admin users to do anything on favIcon table"
on "public"."favIcon"
as permissive
for all
to authenticated
using ((EXISTS ( SELECT 1
   FROM user_roles
  WHERE ((user_roles.user_id = auth.uid()) AND (user_roles.role = 'admin'::app_role)))));


create policy "Allow admin users to do anything on game_plays table"
on "public"."game_plays"
as permissive
for all
to authenticated
using ((EXISTS ( SELECT 1
   FROM user_roles
  WHERE ((user_roles.user_id = auth.uid()) AND (user_roles.role = 'admin'::app_role)))));


create policy "Allow normal users to view game_plays"
on "public"."game_plays"
as permissive
for select
to public
using (true);



